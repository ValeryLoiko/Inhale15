//
//  CoreDataService.swift
//  Inhale15
//
//  Created by Diana on 02/02/2025.
//

import CoreData
import UIKit

class CoreDataService {
    static let shared = CoreDataService()
    private let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
    
    // üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥—ã—Ö–∞–Ω–∏—è
    func saveSession(duration: Double) {
        let session = BreathSession(context: context)
        session.duration = round(duration) // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª—ã—Ö —Å–µ–∫—É–Ω–¥
        session.date = Date()
        saveContext()
    }
    
    // üìå –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π (–ø–æ —É–±—ã–≤–∞–Ω–∏—é –¥–∞—Ç—ã)
    func fetchSessions() -> [BreathSession] {
        let request: NSFetchRequest<BreathSession> = BreathSession.fetchRequest()
        request.sortDescriptors = [NSSortDescriptor(key: "date", ascending: false)]
        
        do {
            return try context.fetch(request)
        } catch {
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Core Data: \(error)")
            return []
        }
    }

    // üìå –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π –∑–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
    func fetchSessions(from startDate: Date, to endDate: Date) -> [BreathSession] {
        let fetchRequest: NSFetchRequest<BreathSession> = BreathSession.fetchRequest()
        fetchRequest.predicate = NSPredicate(format: "date >= %@ AND date <= %@", startDate as NSDate, endDate as NSDate)
        fetchRequest.sortDescriptors = [NSSortDescriptor(key: "date", ascending: false)] // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ

        do {
            return try context.fetch(fetchRequest)
        } catch {
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥: \(error)")
            return []
        }
    }

    // üìå –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π
    func deleteAllSessions() {
        let fetchRequest: NSFetchRequest<NSFetchRequestResult> = BreathSession.fetchRequest()
        let deleteRequest = NSBatchDeleteRequest(fetchRequest: fetchRequest)

        do {
            try context.execute(deleteRequest)
            context.reset() // ‚ö†Ô∏è –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à
        } catch {
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö: \(error)")
        }
    }
    
    // üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Core Data
    private func saveContext() {
        if context.hasChanges {
            do {
                try context.save()
            } catch {
                print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Core Data: \(error)")
            }
        }
    }
}

